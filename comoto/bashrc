#!/bin/bash

export COMOTO_PROJECT_ROOT="$HOME/projects/comoto"
export COMOTO_CLI_ROOT="$JJC_CONFIG_ROOT/comoto_cli"

# TODO switch this back once m path is fixed
# source $(comoto_cli path monorepo)/zlaverse/support/bash_functions.sh
. $COMOTO_PROJECT_ROOT/monorepo/zlaverse/support/bash_functions.sh
. /usr/share/google-cloud-sdk/completion.bash.inc 2>/dev/null

. $COMOTO_CLI_ROOT/comoto_cli.bash

alias cdm='comoto_cli cd monorepo'
alias cdmt='comoto_cli cd monorepo && cd monotest'
alias cde='comoto_cli cd ecom'
alias cdr='comoto_cli cd redline'
# TODO should zla be changed to zlaverse ?
alias cdz='comoto_cli cd zla'
alias cdc="cd $COMOTO_PROJECT_ROOT"

# cg-bash-noninteractive()
# {
#   # This is the same as `cg-bash` from ~/monorepo/zlaverse/support/bash_functions.sh,
#   # just without the -ti flags
#   docker exec -u ${ZV_DEPLOY_UID} $ZV_CG bash -lc "$1"
# }

# TODO move this into monorepo
ecom-dump-schema() {
  cg-bash 'cd apps/redline_core_model && mix ecto.dump'
}

ms() {
  source $COMOTO_CLI_LIB/print
  cmd=$($JJC_CONFIG_LIB/execute_service_bash_fn $@)
  print_and_eval_command "$cmd"
}

_ms_completions() {
  # 'prefix' is e.g. product-search-service
  path=$(pwd)
  prefix=${path##/*/}

  # 'service functions' are e.g.
  #   product-search-service-mix
  #   product-search-service-log
  #   product-search-service-bash
  local service_functions=($(compgen -c | grep $prefix))

  # 'function suffixes' are e.g.
  #   mix
  #   log
  #   bash
  local -a function_suffixes
  for cmd in "${service_functions[@]}"
  do
    suffix=${cmd#$prefix-}
    function_suffixes+=($suffix)
  done
  local suffixes_str="${function_suffixes[@]}"

  # e.g. "mi"
  local cur_word="${COMP_WORDS[$COMP_CWORD]}"

  COMPREPLY=( $(compgen -W "$suffixes_str" -- "$cur_word"))
}

complete -F _ms_completions ms

CDPATH=".:$COMOTO_PROJECT_ROOT"
