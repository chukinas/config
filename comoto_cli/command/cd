#!/bin/bash

# Usage:
#   moto cd comoto
#   moto cd monorepo
#   moto cd redline
#   moto cd ecom

# HELPERS FOR PRINTING OUTPUT TO USER
#######################################

# TODO implement completion
# comoto_cli_command_completion() {
#   complete -W "comoto monorepo ecom redline" moto
# }

local current_command="comoto_cli cd"
. $COMOTO_CLI_ROOT/lib/print "$current_command"

_usage() {
  # TODO implement -e flag
  # TODO DRY the usage out with path
  echo "Usage: $current_command <comoto|monorepo|ecom|redline|zla>"
}

_comoto_cli_command_execute() {
  if [[ $# -ne 1 ]]; then
    _usage >&2
    return 1
  fi

  local where_to=$1

  # TODO can this be used in an if so I don't have to do the `test
  path=$(comoto_cli path $where_to 2>/dev/null)
  # TODO DRY out usage. I don't want to have to add the target both here and there
  [[ $? -ne 0 ]] && echo $usage >&2 && return 1

  # TODO handle for incorrect targets
  print_and_eval_command "cd $(comoto_cli path $where_to)"
}

_comoto_cli_command_completion() {
  unset _comoto_cli_command_completion
  . $COMOTO_CLI_ROOT/command/path
  _comoto_cli_command_completion $*
}
