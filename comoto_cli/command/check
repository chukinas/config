#!/bin/bash

_comoto_cli_command_usage() {
  cat <<EOF

Usage: comoto_cli check [OPTIONS] [CHECKS]

Quality-control your code locally so you don't have to wait for Circle CI to catch it in 30 minutes

Options:
  -h, --help      Print this help and exit

Checks:
  credo
  dialyzer

Examples
  comoto_cli check                  # Run all (both credo and dialyzer)
  comoto_cli check credo            # Run credo only
  comoto_cli check dialyzer         # Run dialyzer only
  comoto_cli check credo dialyzer   # Run both credo and dialyzer
  comoto_cli check -h               # Print this help message
  comoto_cli check --help           # Print this help message

EOF
# TODO add examples to the main comoto_cli help
}

. $COMOTO_CLI_ROOT/lib/print

_comoto_cli_command_usage_short() {
  echo "Usage: comoto_cli check"
}

_comoto_cli_command_error() {
  _comoto_cli_command_usage_short >&2
}

_credo() {
  # TODO copy this pattern to the other scripts
  # TODO can `mix credo` be in single quotes?
  # TODO I don't think the cd is necessary
  # TODO add the rz-repl to comoto_cli
  print_and_eval_command "comoto_cli cd monorepo && rz-bash 'mix credo'"

  credo_exit_code=$?

  echo
  if [[ ! $credo_exit_code -ne 0 ]]
  then
    print_success 'Credo check succeeded'
  else
    print_fail 'Credo check failed'
  fi

  return $credo_exit_code
}

_dialyzer() {
  echo "TODO: implement the dialyzer check"
  :
}

_comoto_cli_command_execute() {
  if [[ $1 =~ ^(-h|--help)$ ]] ; then
    _comoto_cli_command_usage
    return 0
  fi
  # TODO typing 'm check -he' should produce an error, but credo runs anyway
  # TODO implement the credo and dialyzer args

  # if [[ $# -ne 0 ]] ; then
  #   _comoto_cli_command_error
  #   exit 1
  # else
    _credo && _dialyzer
  # fi
}

_comoto_cli_command_completion() {
  :
}
