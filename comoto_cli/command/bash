#!/bin/bash

_comoto_cli_command_summary='Open a terminal to a container'
_comoto_cli_command_usage='comoto_cli bash [OPTIONS] CONTAINER_SHORT_NAME [COMMANDS]'

. $COMOTO_CLI_ROOT/lib/print
. $COMOTO_PROJECT_ROOT/monorepo/zlaverse/support/bash_functions.sh

_comoto_cli_command_help() {
  print_help_h2 Options
  print_help_li '-h, --help  Print this help and exit'
  print_help_li '-p          Echo the command to stoud; do not execute'
  print_help_h2 Container Short Names
  print_help_li 'ecom        The Ruby Ecom/Admin app'
  print_help_li 'cg          Cycle Gear webapp'
  print_help_li 'jp          J&P Cycles webapp'
  print_help_li 'rz          RevZilla   webapp'
  print_help_h2 Examples
  print_help_li 'comoto_cli bash rz         # Bash into local RevZilla container. Local session.'
  print_help_li "comoto_cli bash cg whoami  # echos 'deploy' then exits"
  echo
}

_comoto_cli_command_completion() {
  local cur_arg="${COMP_WORDS[2]}"
  case $COMP_CWORD in
    2)
      COMPREPLY=( $(compgen -W "ecom cg jp rz" -- "$cur_arg") )
      ;;
    *) ;;
  esac
}

_comoto_cli_command_execute() {
  local print_only='false'
  if [[ $1 == '-p' ]] ; then
    print_only='true'
    shift
  fi

  # Get the container identifier
  local container_name
  case $1 in
    ecom       ) container_name=$ZV_ECOM;;
    cg         ) container_name=$ZV_CG  ;;
    jp         ) container_name=$ZV_JP  ;;
    rz         ) container_name=$ZV_RZ  ;;
    *          ) print_usage_error && exit 1
  esac

  # If commands were passed, run execute them in the container,
  # otherwise enter an interactive shell.
  local bash_arg
  shift
  if [[ -z $1 ]] ; then
    # Interactive shell
    bash_arg="TERM=xterm-color bash -l"
  else
    # Non-Interactive shell
    bash_arg="$@"
  fi

  cmd="docker exec -ti -u deploy $container_name bash -lc '$bash_arg'"
  if [[ $print_only == 'true' ]] ; then
    echo "$cmd"
  else
    print_and_eval_command "$cmd"
  fi

}
