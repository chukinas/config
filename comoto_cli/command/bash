#!/bin/bash

_comoto_cli_command_usage() {
  cat <<EOF

Usage: comoto_cli bash [OPTIONS] CONTAINER_SHORT_NAME

Open a terminal to a container

Options:
  -h, --help  Print this help and exit

Container Short Names:
  ecom        The Ruby Ecom/Admin app
  cg          Cycle Gear webapp
  jp          J&P Cycles webapp
  rz          RevZilla   webapp

EOF
}

_comoto_cli_command_args="ecom cg jp rz"

_comoto_cli_command_execute() {
  command='comoto_cli bash'
  . $COMOTO_CLI_ROOT/lib/print $command
  . $COMOTO_PROJECT_ROOT/monorepo/zlaverse/support/bash_functions.sh


  case $1 in
    # TODO error out when given an invalid $1
    -h | --help) _comoto_cli_command_usage; return 0;;
    # TODO for now, there's only allowed to be one command. I should remove that restriction though
    ecom|cg|jp|rz)
      orig_alias="$1-bash"
      shift
      subcommand="$orig_alias '$*'"
      ;;
    *) echo "TODO this is error msg" >&2 && exit 1
  esac

  # TODO include a flag to suppress output. That'll be useful when one command (e.g. migrate) calls another (like this one)
  print_and_eval_command --include-type "$subcommand"
}

_comoto_cli_command_completion() {
  local cur_arg="${COMP_WORDS[2]}"
  case $COMP_CWORD in
    2)
      COMPREPLY=( $(compgen -W "$_comoto_cli_command_args" -- "$cur_arg") )
      ;;
    *) ;;
  esac
}
