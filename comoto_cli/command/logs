#!/bin/bash

# TODO if I enter a wrong container abbrev, it shows all. It should throw error instead

. $COMOTO_CLI_ROOT/lib/print

# TODO -p flag is inconsistent with the print-only flag in at least one other command

_comoto_cli_command_summary='View the logs for one or several containers'
_comoto_cli_command_usage='comoto_cli logs [OPTIONS] [CONTAINERS]'

_comoto_cli_command_help() {
  cat <<EOF

Options:
  -h, --help      Print this help and exit
  -t              Tail: number of lines to print initially (default: 10)
  -p              Print command to stout; do not execute

Containers:
  cg
  jp
  rz
  redline         (not yet implemented)

Examples
  comoto_cli logs           # View all logs (All redline apps, ecom, services, etc)
  comoto_cli logs cg        # View logs for Cycle Gear
  comoto_cli logs redline   # View logs for all redline apps (i.e cg, jp, rz)
  comoto_cli logs cg rz     # View logs for Cycle Gear and RevZilla

  comoto_cli logs -h        # Print this help
  comoto_cli logs --help    # Print this help

  comoto_cli logs jp        # View last 10 (the default) J&P Cycles log rows, then stream all incoming
  comoto_cli logs -t 100 jp # View last 100 J&P Cycles log rows, then stream all incoming

EOF
}

# TODO should this be a subcommand for container?
#   It has the same completion as bounce too

_comoto_cli_command_completion() {
  # TODO introduce logic for excluding the options once we're started on the args
  option_words="--help -t -p"
  arg_words="cg jp rz redline"
  COMPREPLY=( $(compgen -W "$option_words $arg_words" -- "${COMP_WORDS[$COMP_CWORD]}") )
}

_comoto_cli_command_execute() {
  local tail=10
  local print_only='false'

  while :; do
    case "${1-}" in
      -h|--help) $COMOTO_CLI_ROOT/lib/render_help; return 0;;
      -t) tail="$2";shift;;
      -p) print_only='true';shift;;
      *) break ;;
    esac
    shift
  done

  app_name="$($COMOTO_CLI_ROOT/lib/container_name $1)"

  case $? in
    0|1) ;;
    *) echo print_usage_error && exit 1
  esac

  cmd="($(comoto_cli cd -t monorepo) && docker-compose logs -f --tail=$tail $app_name)"
  if [[ $print_only == 'true' ]] ; then
    echo "$cmd"
  else
    print_and_eval_command "$cmd"
  fi
}
