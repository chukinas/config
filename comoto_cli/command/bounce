#!/bin/bash

_comoto_cli_command_help() {
  cat <<EOF

Usage: comoto_cli bounce [OPTIONS] [CONTAINER_SHORT_NAME]

Restart containers

If no args are given, all containers are down/up'ed via 'docker-compose'.
If passed a container short name, only that one container is bounced via
'docker restart'.

Options:
  -h, --help  Print this help and exit

Container Short Names:
  cg          Cycle Gear
  jp          J&P Cycles
  rz          RevZilla

EOF
}

# TODO add an -L option to suppress the logs
# TODO this command isn't working for some reason
# TODO this command shouldn't take arguments. Instead, it should only take options.
# TODO weeeellll.... is that true? Or does it just take an arbitrary number, and each arg has to be one of ...
#   cg
#   jp
#   rz
#   redline
#   all (default)
# TODO maybe this should go into the container command

_comoto_cli_command_execute() {
  . $COMOTO_CLI_ROOT/lib/print 'comoto_cli bounce'

  if [[ $# -eq 0 ]] ; then
    # TODO make sure all into calls to the cli use `comoto_cli` longform. Add this note to a "contributions" README
    # TODO extract path into the library
    subcommand="(cd $(comoto_cli path monorepo) && docker-compose down && docker-compose up -d) && comoto_cli logs"
  elif [[ $# -gt 1 ]] ; then
    echo "error ... must have one or zero args" >&2
    exit 1
  elif container_name=$($COMOTO_CLI_ROOT/lib/container_name $1) ; then
    # TODO check for bad abbrev
    # TODO this isn't working
    subcommand="(comoto_cli cd monorepo docker restart $container_name) && comoto_cli logs $container_name"
  else
    echo "error ... $1 is a bad arg" >&2
    exit 1
  fi

  # TODO I shouldn't have to wrap this in quotes?
  print_and_eval_command "$subcommand"

  # TODO add the ability to bounce just a single webapp and/or the ability to bounce all three redline apps
}

_comoto_cli_command_completion() {
  local valid_args=$($COMOTO_CLI_ROOT/lib/container_name -l)
  [[ $# -gt 1 ]] && return 1
  COMPREPLY=( $(compgen -W "$valid_args" -- "$1") )
}
