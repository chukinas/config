#!/bin/bash

# Reindex your local Elasticsearch.
# Run this after restoring your local db from a GCP dump.
#
# Based on the instruction found here:
# https://revzilla.atlassian.net/wiki/spaces/TECH/pages/338919566/Kubernetes+and+Google+Cloud+-+Getting+Started
#
# USAGE
usage="$COMOTO_CLI_LIB/elasticsearch reindex|monitor_reindex"

. $COMOTO_CLI_ZLA_BASH_FUNCTIONS
. $COMOTO_CLI_LIB/print
. $COMOTO_CLI_LIB/db_restore

print_error_and_exit() {
  echo "Usage: $usage"
  echo 'Exiting'
  exit 1
}

reindex_general() {
  if print_confirm "Reindexing Elasticsearch can take between 16-24 hours if this is your first time running it. Continue?" ; then
    db_restore_log "begin elasticsearch reindex"
    if print_and_eval_command cg-product-catalog-reindex ; then
      # TODO hmmm gonna have to refactor this. That shell function never exits
      # TODO I'll have to monitor the blogs looking for the correct text string
      db_restore_log "complete elasticsearch reindex"
      exit 0
    else
      db_restore_log "failed elasticsearch reindex"
      exit 1
    fi
  else
    echo 'Exiting'
    exit 1
  fi
}

reindex_blogs() {
  local iex_command='Redline.Blog.Elasticsearch.Worker.reindex(nil, Redline.Blog.create_index)'
  db_restore_log "begin elasticsearch blog reindex"
  if print_and_eval_command "rz-iex '$iex_command'" ; then
    db_restore_log "complete elasticsearch blog reindex"
    exit 0
  else
    db_restore_log "failed elasticsearch blog reindex"
    exit 1
  fi
  print_and_eval_command
}

monitor() {
  local monitor_url='http://localhost:9200/_plugin/head/'
  echo "Open $monitor_url in a browser."
  echo 'You can set the refresh rate using the `refresh` pulldown menu.'
  print_and_eval_command "open $monitor_url"
}

reindex_all() {
  # this bounce might not be necessary?
  # I orig put this in here b/c when I opened the monitoring site before starting the actual reindex,
  # There was no page available b/c my pods weren't up yet.
  comoto_cli bounce
  # TODO it could be a problem, waiting for the general reindex to finish first, b/c it seems to literally never end for anyone.
  # It just runs and runs forever.
  # Solve this by simply alerting the user to this? Telling them to run the blog reindex later?
  # What does the confluence doc say?
  reindex_general && reindex_blogs
}

# MAIN SCRIPT
#######################################

if [[ $# -eq 0 ]] ; then
  monitor && reindex_all
  exit $?
elif [[ $# -eq 1 ]] ; then
  case "$1" in
    blog)
      reindex_blogs
      exit $?
      ;;
    monitor_reindex)
      monitor
      exit $?
      ;;
    reindex)
      reindex_all
      exit $?
      ;;
  esac
fi

print_error_and_exit
